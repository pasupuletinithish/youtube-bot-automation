# .github/workflows/daily_video.yml
name: Daily Video Automation

on:
  # Runs every day at 10:00 AM UTC (adjust time to your preference)
  schedule:
    - cron: '0 10 * * *' 
  
  # Allows manual triggering from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 1. CRITICAL FIX: Installs FFmpeg reliably without needing sudo
      # This action sets up the system-level FFmpeg binary required by MoviePy.
      - name: Setup FFmpeg
        uses: FedericoCarboni/setup-ffmpeg@v3
        with:
          ffmpeg-version: 'release' 

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      # 2. CRITICAL FIX: Base64 Decoding of the Refresh Token
      # This creates a clean local file with the token, bypassing string corruption errors.
      - name: Create Auth File for Python
        id: create_auth_file
        run: |
          # The secret contains the credentials packaged as JSON text.
          # We decode it and save it as a file named auth_token.json.
          echo "${{ secrets.YOUTUBE_REFRESH_TOKEN_FILE }}" | base64 --decode > auth_token.json
        shell: bash
        
      # 3. RUN MAIN SCRIPT
      - name: Run Video Generation Script
        run: python main.py
        env:
          # Passes the path to the newly created token file (used in main.py's auth function)
          YOUTUBE_TOKEN_PATH: auth_token.json
          
          # Passes the other required secrets
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }} 
          HF_TOKEN: ${{ secrets.HF_TOKEN }} 
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}